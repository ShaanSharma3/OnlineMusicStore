@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title - Melody Haven</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-purple: #8e44ad;
            --secondary-purple: #b366d9;
            --light-purple: #e6d5f5;
            --hover-purple: #a055c0;
            --text-purple: #d4bff9;
            --dark-bg: #121212;
            --dark-secondary: #1e1e1e;
            --dark-component: #262626;
            --light-text: #f1f1f1;
            --secondary-text: #b3b3b3;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--dark-bg);
            color: var(--light-text);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .bg-purple {
            background-color: var(--primary-purple) !important;
        }

        .text-purple {
            color: var(--primary-purple) !important;
        }

        /* Logo Container */
        .logo-container {
            display: flex;
            align-items: center;
        }

        .music-icon {
            margin-right: 8px;
            color: var(--primary-purple);
        }

        /* Simple music note with bounce effect - uses transition instead of keyframes */
        .music-note {
            margin-left: 5px;
            display: inline-block;
            color: var(--secondary-purple);
            position: relative;
            top: 0;
            transition: top 0.3s ease;
        }

            .music-note:hover {
                top: -5px;
            }

        /* Sound bars - static visualization */
        .sound-wave {
            display: inline-flex;
            align-items: flex-end;
            height: 20px;
            margin-left: 5px;
        }

            .sound-wave .bar {
                width: 3px;
                background: var(--secondary-purple);
                margin: 0 1px;
                border-radius: 2px;
                opacity: 0.8;
            }

                .sound-wave .bar:nth-child(1) {
                    height: 8px;
                }

                .sound-wave .bar:nth-child(2) {
                    height: 12px;
                }

                .sound-wave .bar:nth-child(3) {
                    height: 16px;
                }

                .sound-wave .bar:nth-child(4) {
                    height: 12px;
                }

                .sound-wave .bar:nth-child(5) {
                    height: 8px;
                }

        /* Navbar Styling */
        .navbar {
            background: var(--dark-component) !important;
            box-shadow: 0 4px 12px rgba(142, 68, 173, 0.3) !important;
            padding: 15px 0;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--primary-purple);
        }

        .nav-link {
            color: var(--secondary-text) !important;
            font-weight: 500;
            margin: 0 5px;
            transition: all 0.3s ease;
            position: relative;
        }

            .nav-link:hover {
                color: var(--light-purple) !important;
            }

            .nav-link.active {
                color: var(--primary-purple) !important;
                font-weight: 600;
            }

                .nav-link.active::after {
                    content: '';
                    position: absolute;
                    bottom: -5px;
                    left: 0;
                    width: 50px;
                    max-width: 100%;
                    height: 3px;
                    background: linear-gradient(45deg, var(--primary-purple), var(--secondary-purple));
                    border-radius: 10px;
                }

        /* Badge Styling */
        .wishlist-badge,
        .cart-badge {
            background: linear-gradient(45deg, var(--primary-purple), var(--secondary-purple));
            color: white;
            padding: 2px 6px;
            border-radius: 50%;
            font-size: 0.75rem;
            margin-left: 5px;
            position: relative;
            top: -8px;
            box-shadow: 0 3px 6px rgba(142, 68, 173, 0.3);
        }

        /* Content Area */
        .main-content {
            flex: 1;
            padding: 20px 0;
        }

        /* Alert Styling */
        .alert-dismissible {
            margin-top: 15px;
            border-radius: 12px;
            border: none;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .alert-success {
            background-color: rgba(25, 135, 84, 0.2);
            color: #2ecc71;
        }

        .alert-info {
            background-color: rgba(13, 110, 253, 0.2);
            color: #3498db;
        }

        .alert-link {
            color: var(--primary-purple);
            font-weight: 600;
            text-decoration: none;
        }

            .alert-link:hover {
                text-decoration: underline;
            }

        /* Footer Styling */
        footer {
            background: var(--dark-component) !important;
            box-shadow: 0 -4px 12px rgba(142, 68, 173, 0.2);
            margin-top: auto;
        }

            footer h5 {
                color: var(--primary-purple);
                font-weight: 600;
                margin-bottom: 20px;
            }

            footer .list-unstyled li {
                margin-bottom: 10px;
            }

            footer .list-unstyled a {
                color: var(--secondary-text);
                text-decoration: none;
                transition: all 0.3s ease;
            }

                footer .list-unstyled a:hover {
                    color: var(--primary-purple);
                }

            footer .social-icons a {
                display: inline-flex;
                align-items: center;
                justify-content: center;
                width: 38px;
                height: 38px;
                border-radius: 50%;
                background: rgba(142, 68, 173, 0.2);
                margin-right: 15px;
                transition: all 0.3s ease;
            }

                footer .social-icons a:hover {
                    background: var(--primary-purple);
                }

                    footer .social-icons a:hover i {
                        color: white !important;
                    }

            footer .copyright {
                background-color: rgba(142, 68, 173, 0.2);
                color: var(--text-purple);
                font-weight: 500;
            }

        /* Button Styling */
        .btn-purple {
            background: linear-gradient(45deg, var(--primary-purple), var(--secondary-purple));
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(142, 68, 173, 0.3);
        }

            .btn-purple:hover {
                background: linear-gradient(45deg, var(--hover-purple), var(--secondary-purple));
                box-shadow: 0 6px 15px rgba(142, 68, 173, 0.4);
                color: white;
            }

        /* Card styling for consistency */
        .card {
            border: none;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(142, 68, 173, 0.2);
            transition: all 0.3s ease;
            background-color: var(--dark-component);
        }

            .card:hover {
                box-shadow: 0 15px 35px rgba(142, 68, 173, 0.3);
                transform: translateY(-5px);
            }

        .card-header {
            background: linear-gradient(45deg, var(--primary-purple), var(--secondary-purple));
            color: white;
            padding: 20px;
        }

        .card-title {
            color: var(--primary-purple);
        }

        /* Form controls */
        .form-control {
            background-color: var(--dark-secondary);
            border-color: #444;
            color: var(--light-text);
        }

            .form-control:focus {
                background-color: var(--dark-secondary);
                border-color: var(--secondary-purple);
                box-shadow: 0 0 0 0.25rem rgba(142, 68, 173, 0.25);
                color: var(--light-text);
            }

        /* Table styling */
        .table {
            color: var(--secondary-text);
        }

            .table thead th {
                color: var(--light-text);
                border-color: #444;
            }

            .table td {
                border-color: #444;
            }

        /* Navbar adjustments for mobile */
        .navbar-nav {
            margin-top: 0;
        }

        .navbar-collapse.show .navbar-nav {
            margin-top: 10px;
        }

        /* Responsive adjustments */
        .mobile-nav {
            margin-top: 15px;
        }

        /* Navbar toggler */
        .navbar-toggler {
            border-color: rgba(142, 68, 173, 0.5);
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(142, 68, 173, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        /* Glow effect for primary elements */
        .glow-effect {
            box-shadow: 0 0 15px rgba(142, 68, 173, 0.5);
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark mb-3">
        <div class="container">
            <a class="navbar-brand logo-container" href="@Url.Action("Index", "Home")">
                <i class="fas fa-headphones music-icon"></i> Melody Haven
                <!-- Simple sound wave visualization (no animation) -->
                <div class="sound-wave">
                    <div class="bar"></div>
                    <div class="bar"></div>
                    <div class="bar"></div>
                    <div class="bar"></div>
                    <div class="bar"></div>
                </div>
                <i class="fas fa-music music-note"></i>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false"
                    aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("ChartToppers", "Music")">Chart Toppers</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("NewReleases", "Music")">New Releases</a>
                    </li>



                    @if (Session["UserId"] != null)
                    {
                        <!-- Wishlist with Badge -->
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Wishlist", "Music")">
                                <i class="@(Session["WishlistCount"] != null && (int)Session["WishlistCount"] > 0 ? "fas" : "far") fa-heart"></i> Wishlist
                                @if (Session["WishlistCount"] != null && (int)Session["WishlistCount"] > 0)
                                {
                                    <span class="wishlist-badge">@Session["WishlistCount"]</span>
                                }
                            </a>
                        </li>

                        <!-- Shopping Cart with Badge -->
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Cart", "Music")">
                                <i class="fas fa-shopping-cart"></i> Cart
                                @if (Session["CartCount"] != null && (int)Session["CartCount"] > 0)
                                {
                                    <span class="cart-badge">@Session["CartCount"]</span>
                                }
                            </a>
                        </li>
                    }
                </ul>
                <form class="d-flex me-3" action="@Url.Action("Search", "Music")" method="get">
                    <div class="input-group">
                        <input class="form-control" type="search" name="searchTerm" placeholder="Search music..." aria-label="Search" style="background-color: var(--dark-secondary); border-color: var(--secondary-purple); color: var(--light-text);">
                        <button class="btn btn-purple" type="submit">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </form>
                <!-- Auth links -->
                <ul class="navbar-nav ms-auto">
                    @if (Session["UserId"] != null)
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("UserProfile", "Account")">
                                <i class="fas fa-user"></i> My Profile
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Logout", "Account")">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Login", "Account")">
                                <i class="fas fa-sign-in-alt"></i> Login
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Register", "Account")">
                                <i class="fas fa-user-plus"></i> Register
                            </a>
                        </li>
                    }

                    <!-- Feedback Link -->
                    @if (Session["AdminLoggedIn"] == null || !(bool)Session["AdminLoggedIn"])
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Create", "Comment")">
                                <i class="fas fa-comment"></i> Feedback
                            </a>
                        </li>
                    }
                    @if (Session["UserId"] == null)
                    {
                        <li class="nav-item">
                            <a class="nav-link admin-link" href="@Url.Action("Login", "Admin")">
                                <i class="fas fa-user-shield"></i> Admin
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content Area -->
    <div class="main-content">
        <div class="container">
            <!-- Notification Messages Area -->
            <div class="notifications">
                @if (TempData["WishlistSuccess"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i> @TempData["WishlistSuccess"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["CartSuccess"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i> @TempData["CartSuccess"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["WishlistInfo"] != null)
                {
                    <div class="alert alert-info alert-dismissible fade show" role="alert">
                        <i class="fas fa-info-circle me-2"></i> @TempData["WishlistInfo"]
                        <a href="@Url.Action("Wishlist", "Music")" class="alert-link ms-2">View your wishlist</a>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["CartInfo"] != null)
                {
                    <div class="alert alert-info alert-dismissible fade show" role="alert">
                        <i class="fas fa-info-circle me-2"></i> @TempData["CartInfo"]
                        <a href="@Url.Action("Cart", "Music")" class="alert-link ms-2">Update quantity in cart</a>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
            </div>

            @RenderBody()
        </div>
    </div>

    <!-- Footer -->
    <footer class="py-4">
        <div class="container">
            <div class="row">
                <div class="col-lg-4 col-md-6 mb-4 mb-md-0">
                    <h5 class="text-uppercase">About Melody Haven</h5>
                    <p>Your one-stop destination for music lovers. Discover the latest releases and chart-topping hits with our curated collections and personalized recommendations.</p>
                </div>

                <div class="col-lg-4 col-md-6 mb-4 mb-md-0">
                    <h5 class="text-uppercase">Quick Links</h5>
                    <ul class="list-unstyled mb-0">
                        <li><a href="#!"><i class="fas fa-question-circle me-2"></i>FAQ</a></li>
                        <li><a href="#!"><i class="fas fa-life-ring me-2"></i>Support</a></li>
                        <li><a href="#!"><i class="fas fa-envelope me-2"></i>Contact Us</a></li>
                        <li><a href="#!"><i class="fas fa-truck me-2"></i>Shipping Policy</a></li>
                    </ul>
                </div>

                <div class="col-lg-4 col-md-12 mb-4 mb-md-0">
                    <h5 class="text-uppercase">Connect With Us</h5>
                    <p>Follow us on social media for updates, promotions and musical inspiration.</p>
                    <div class="mt-3 social-icons">
                        <a href="#"><i class="fab fa-facebook-f text-purple"></i></a>
                        <a href="#"><i class="fab fa-twitter text-purple"></i></a>
                        <a href="#"><i class="fab fa-instagram text-purple"></i></a>
                        <a href="#"><i class="fab fa-youtube text-purple"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="text-center p-3 copyright">
            © @DateTime.Now.Year Melody Haven. All rights reserved.
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Active link handling
            const currentPath = window.location.pathname;
            document.querySelectorAll('.navbar-nav .nav-link').forEach(link => {
                if (link.getAttribute('href') === currentPath) {
                    link.classList.add('active');
                }
            });

            // Auto-dismiss alerts after 5 seconds
            setTimeout(function () {
                document.querySelectorAll('.alert').forEach(alert => {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);

            // Responsive adjustments
            function adjustResponsive() {
                if (window.innerWidth <= 992) {
                    document.querySelectorAll('.navbar-nav').forEach(nav => {
                        nav.classList.add('mobile-nav');
                    });
                } else {
                    document.querySelectorAll('.navbar-nav').forEach(nav => {
                        nav.classList.remove('mobile-nav');
                    });
                }
            }

            // Call on load and resize
            adjustResponsive();
            window.addEventListener('resize', adjustResponsive);

            // Simple animation for the music note using JavaScript instead of CSS keyframes
            const musicNote = document.querySelector('.music-note');
            let goingUp = true;
            let position = 0;

            // Simple animation without keyframes
            setInterval(function () {
                if (goingUp) {
                    position -= 1;
                    if (position <= -5) {
                        goingUp = false;
                    }
                } else {
                    position += 1;
                    if (position >= 5) {
                        goingUp = true;
                    }
                }

                musicNote.style.transform = `translateY(${position}px)`;
            }, 100);

            // Make sound waves "pulse" by changing opacity
            const bars = document.querySelectorAll('.sound-wave .bar');

            setInterval(function () {
                bars.forEach(bar => {
                    // Random height between 5px and 16px
                    const height = Math.floor(Math.random() * 12) + 5;
                    bar.style.height = `${height}px`;

                    // Random opacity between 0.5 and 1
                    const opacity = Math.random() * 0.5 + 0.5;
                    bar.style.opacity = opacity;
                });
            }, 300);
        });
    </script>

    @RenderSection("scripts", required: false)
</body>
</html>